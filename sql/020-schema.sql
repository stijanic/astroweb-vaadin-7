DROP TABLE IF EXISTS friend CASCADE;

DROP TABLE IF EXISTS person CASCADE;

DROP TABLE IF EXISTS natal_chart CASCADE;

DROP TABLE IF EXISTS location CASCADE;

DROP TABLE IF EXISTS compatibility CASCADE;

DROP TABLE IF EXISTS account CASCADE;

DROP TABLE IF EXISTS aspect CASCADE;

DROP TABLE IF EXISTS country CASCADE;

DROP TABLE IF EXISTS celestial CASCADE;

--COMMIT;

BEGIN;

CREATE TABLE ACCOUNT 
(
    ID SERIAL NOT NULL,
    USER_NAME CHARACTER VARYING(64) NOT NULL,
    PASSWORD CHARACTER VARYING(256) NOT NULL,
    EMAIL CHARACTER VARYING(256) NOT NULL,
    CREATE_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    UPDATE_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    ACCOUNT_PERSON_ID BIGINT NOT NULL
);


CREATE TABLE ASPECT 
(
    ID SERIAL NOT NULL,
    RELATION_TYPE CHARACTER NOT NULL,
    CONJUNCTION DOUBLE PRECISION NOT NULL,
    SEXTILE DOUBLE PRECISION NOT NULL,
    SQUARE DOUBLE PRECISION NOT NULL,
    TRINE DOUBLE PRECISION NOT NULL,
    OPPOSITION DOUBLE PRECISION NOT NULL,
    UPDATE_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CELESTIAL_ID_FIRST BIGINT NOT NULL,
    CELESTIAL_ID_SECOND BIGINT NOT NULL
);


CREATE TABLE CELESTIAL 
(
    ID SERIAL NOT NULL,
    NAME CHARACTER VARYING(64) NOT NULL,
    DESCRIPTION CHARACTER VARYING(4096) NOT NULL,
    UPDATE_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);


CREATE TABLE COMPATIBILITY 
(
    ID SERIAL NOT NULL,
    RELATION_TYPE CHARACTER NOT NULL,
    SCORE DOUBLE PRECISION NOT NULL,
    UPDATE_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);


CREATE TABLE COUNTRY 
(
    ID SERIAL NOT NULL,
    NAME CHARACTER VARYING(64) NOT NULL,
    FLAG CHARACTER VARYING(256) NOT NULL,
    LOCALE CHARACTER VARYING(64) NOT NULL
);


CREATE TABLE FRIEND 
(
    ID SERIAL NOT NULL,
    STATUS BOOLEAN NOT NULL,
    UPDATE_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    PERSON_ID_PETITIONER BIGINT NOT NULL,
    PERSON_ID_SOLICITED BIGINT NOT NULL,
    COMPATIBILITY_ID BIGINT NOT NULL,
    COMPATIBILITY_RELATION_TYPE CHARACTER NOT NULL
);


CREATE TABLE LOCATION 
(
    ID SERIAL NOT NULL,
    NAME CHARACTER VARYING(64) NOT NULL,
    LATITUDE DOUBLE PRECISION NOT NULL,
    LONGITUDE DOUBLE PRECISION NOT NULL,
    TIMEZONE CHARACTER VARYING(64) NOT NULL,
    COUNTRY_ID BIGINT NOT NULL
);


CREATE TABLE NATAL_CHART 
(
    ID SERIAL NOT NULL,
    SUN DOUBLE PRECISION NOT NULL,
    MOON DOUBLE PRECISION NOT NULL,
    MERCURE DOUBLE PRECISION NOT NULL,
    VENUS DOUBLE PRECISION NOT NULL,
    MARS DOUBLE PRECISION NOT NULL,
    JUPITER DOUBLE PRECISION NOT NULL,
    SATURN DOUBLE PRECISION NOT NULL,
    URANUS DOUBLE PRECISION NOT NULL,
    NEPTUNE DOUBLE PRECISION NOT NULL,
    PLUTO DOUBLE PRECISION NOT NULL,
    FIRST_HOUSE DOUBLE PRECISION NOT NULL,
    SECOND_HOUSE DOUBLE PRECISION NOT NULL,
    THIRD_HOUSE DOUBLE PRECISION NOT NULL,
    FOURTH_HOUSE DOUBLE PRECISION NOT NULL,
    FIFTH_HOUSE DOUBLE PRECISION NOT NULL,
    SIXTH_HOUSE DOUBLE PRECISION NOT NULL,
    SEVENTH_HOUSE DOUBLE PRECISION NOT NULL,
    EIGHTH_HOUSE DOUBLE PRECISION NOT NULL,
    NINTH_HOUSE DOUBLE PRECISION NOT NULL,
    TENTH_HOUSE DOUBLE PRECISION NOT NULL,
    ELEVENTH_HOUSE DOUBLE PRECISION NOT NULL,
    TWELFTH_HOUSE DOUBLE PRECISION NOT NULL,
    UPDATE_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    NATAL_CHART_PERSON_ID BIGINT NOT NULL
);


CREATE TABLE PERSON 
(
    ID SERIAL NOT NULL,
    FIRST_NAME CHARACTER VARYING(64) NOT NULL,
    LAST_NAME CHARACTER VARYING(64) NOT NULL,
    BIRTHDAY TIMESTAMP NOT NULL,
    SEX CHARACTER NOT NULL,
    CREATE_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    UPDATE_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    LOCATION_ID BIGINT NOT NULL
);


CREATE UNIQUE INDEX X_COMPATIBILITY_ID_RELATION_TYPE ON FRIEND
(
  COMPATIBILITY_ID,
  COMPATIBILITY_RELATION_TYPE
);
CREATE UNIQUE INDEX X_PERSON_ID ON NATAL_CHART
(
  NATAL_CHART_PERSON_ID
);
ALTER TABLE ACCOUNT 
  ADD CONSTRAINT PK_ACCOUNT_ID PRIMARY KEY (
    ID)  ;
ALTER TABLE ASPECT 
  ADD CONSTRAINT PK_ASPECT_ID_RELATION_TYPE PRIMARY KEY (
    ID, RELATION_TYPE)  ;
ALTER TABLE CELESTIAL 
  ADD CONSTRAINT PK_CELESTIAL_ID PRIMARY KEY (
    ID)  ;
ALTER TABLE COMPATIBILITY 
  ADD CONSTRAINT PK_COMPATIBILITY_ID_RELATION_TYPE PRIMARY KEY (
    ID, RELATION_TYPE)  ;
ALTER TABLE COUNTRY 
  ADD CONSTRAINT PK_COUNTRY_ID PRIMARY KEY (
    ID)  ;
ALTER TABLE FRIEND 
  ADD CONSTRAINT PK_FRIEND_ID PRIMARY KEY (
    ID)  ;
ALTER TABLE LOCATION 
  ADD CONSTRAINT PK_LOCATION_ID PRIMARY KEY (
    ID)  ;
ALTER TABLE NATAL_CHART 
  ADD CONSTRAINT PK_NATAL_CHART_ID PRIMARY KEY (
    ID)  ;
ALTER TABLE PERSON 
  ADD CONSTRAINT PK_PERSON_ID PRIMARY KEY (
    ID)  ;
ALTER TABLE ACCOUNT 
  ADD CONSTRAINT UK_ACCOUNT_USER_NAME UNIQUE (
    USER_NAME)  ;
ALTER TABLE CELESTIAL 
  ADD CONSTRAINT UK_CELESTIAL_DESCRIPTION UNIQUE (
    DESCRIPTION)  ;
ALTER TABLE CELESTIAL 
  ADD CONSTRAINT UK_CELESTIAL_NAME UNIQUE (
    NAME)  ;
ALTER TABLE COUNTRY 
  ADD CONSTRAINT UK_COUNTRY_FLAG UNIQUE (
    FLAG)  ;
ALTER TABLE COUNTRY 
  ADD CONSTRAINT UK_COUNTRY_NAME UNIQUE (
    NAME)  ;
ALTER TABLE ASPECT
  ADD CONSTRAINT FK_CELESTIAL_ID_FIRST 
    FOREIGN KEY (CELESTIAL_ID_FIRST)
      REFERENCES CELESTIAL
        ON DELETE CASCADE
        ON UPDATE CASCADE;

ALTER TABLE ASPECT
  ADD CONSTRAINT FK_CELESTIAL_ID_SECOND 
    FOREIGN KEY (CELESTIAL_ID_SECOND)
      REFERENCES CELESTIAL;

ALTER TABLE FRIEND
  ADD CONSTRAINT FK_COMPATIBILITY_ID_RELATION_TYPE 
    FOREIGN KEY (COMPATIBILITY_ID, COMPATIBILITY_RELATION_TYPE)
      REFERENCES COMPATIBILITY;

ALTER TABLE LOCATION
  ADD CONSTRAINT FK_COUNTRY_ID 
    FOREIGN KEY (COUNTRY_ID)
      REFERENCES COUNTRY;

ALTER TABLE PERSON
  ADD CONSTRAINT FK_LOCATION_ID 
    FOREIGN KEY (LOCATION_ID)
      REFERENCES LOCATION;

ALTER TABLE ACCOUNT
  ADD CONSTRAINT FK_ACCOUNT_PERSON_ID 
    FOREIGN KEY (ACCOUNT_PERSON_ID)
      REFERENCES PERSON
        ON DELETE CASCADE;

ALTER TABLE NATAL_CHART
  ADD CONSTRAINT FK_NATAL_CHART_PERSON_ID 
    FOREIGN KEY (NATAL_CHART_PERSON_ID)
      REFERENCES PERSON
        ON DELETE CASCADE;

ALTER TABLE FRIEND
  ADD CONSTRAINT FK_PERSON_ID_PETITIONER 
    FOREIGN KEY (PERSON_ID_PETITIONER)
      REFERENCES PERSON
        ON DELETE CASCADE;

ALTER TABLE FRIEND
  ADD CONSTRAINT FK_PERSON_ID_SOLICITED 
    FOREIGN KEY (PERSON_ID_SOLICITED)
      REFERENCES PERSON
        ON DELETE CASCADE;
      
END;

--COMMIT;
